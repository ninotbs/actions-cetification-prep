# This workflow demonstrates how to use contexts and variables in GitHub Actions.
# It retrieves and displays various context values and environment variables.
# It also shows how to override environment variables at different levels.
# The workflow is triggered manually using the 'workflow_dispatch' event.
# The workflow includes two jobs: 'echo-data' and 'echo-data-2'.
# The 'echo-data' job retrieves and displays context values and environment variables.
# The 'echo-data-2' job retrieves and displays environment variables.
# The workflow includes a debug input parameter that can be set to true or false.
# The debug input parameter is used to control the debug mode of the workflow.

name: Contexts
run-name: Display Contexts and Variables | Debug - ${{ inputs.debug }}

on: 
    workflow_dispatch:
        inputs:
            debug:
                type: boolean
                default: false
                description: Enable debug mode

env:
    MY_WORKFLOW_VAR: "workflow"
    MY_OVERWRITTEN_VAR: "workflow"

jobs:
    echo-data:
        runs-on: ubuntu-latest
        env:
            MY_JOB_VAR: "job"
            MY_OVERWRITTEN_VAR: "job"
        steps:
            - name: Display Contexts
              run: |
                echo "Event Name: ${{ github.event_name }}"
                echo "Ref: ${{ github.ref }}"
                echo "SHA: ${{ github.sha }}"
                echo "Actor: ${{ github.actor }}"
                echo "Workflow: ${{ github.workflow }}"
                echo "Run ID: ${{ github.run_id }}"
                echo "Run Number: ${{ github.run_number }}"
            - name: Retrieve Variables
              run: |
                echo "Variable value: ${{ vars.MY_VAR }}"
            - name: Print environment variables
              env:
                MY_OVERWRITTEN_VAR: 'step'
              run: |
                echo "MY_WORKFLOW_VAR: ${{ env.MY_WORKFLOW_VAR }}"
                echo "MY_JOB_VAR: ${{ env.MY_OVERWRITTEN_VAR }}"
            - name: Print environment variables
              run: |
                echo "MY_WORKFLOW_VAR: ${{ env.MY_WORKFLOW_VAR }}"
                echo "MY_OVERWRITTEN_VAR: ${{ env.MY_OVERWRITTEN_VAR }}"
    echo-data-2:
        runs-on: ubuntu-latest
        steps:
            - name: Print environment variables
              run: |
                echo "MY_WORKFLOW_VAR: $MY_WORKFLOW_VAR"
                echo "MY_OVERWRITTEN_VAR: $MY_OVERWRITTEN_VAR"
