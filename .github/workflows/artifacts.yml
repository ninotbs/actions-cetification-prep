# This workflow is triggered manually and builds the app, runs tests, and uploads artifacts.
# It also downloads the build artifact for further use in the deployment jobs.
# The workflow uses caching to speed up the installation of dependencies.
# The workflow is set to run on the latest version of Ubuntu.
# The workflow uses Node.js version 23.x for the build process.
# The workflow uses the actions/checkout, actions/setup-node, actions/cache, actions/upload-artifact, and actions/download-artifact actions.
# The workflow uses the actions/upload-artifact action to upload test coverage reports and build files.
# The workflow uses the actions/download-artifact action to download the build artifact for deployment.
# The workflow uses the actions/cache action to cache the node_modules directory to speed up the installation of dependencies.
# The workflow uses the actions/setup-node action to set up Node.js for the build process.
# The workflow uses the actions/checkout action to check out the code from the repository.
# The workflow uses the actions/upload-artifact action to upload the test coverage reports and build files as artifacts.

name: Artifacts

on:
  workflow_dispatch:

env:
  build-artifact-key: app-${{ github.sha }}
  test-coverage-key: test-coverage-${{ github.sha }}

jobs:
    test-build:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: app
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version: '23.x'
        - name: Download cached dependencies
          uses: actions/cache@v3
          id: cache
          with:
            path: app/node_modules
            key: deps-node-modules-${{ hashFiles('app/package-lock.json') }}
        - name: Install dependencies
          if: steps.cache.outputs.cache-hit != 'true'
          run: npm ci
        - name: Unit tests
          run: npm run test -- --coverage
        - name: Upload test results
          uses: actions/upload-artifact@v4
          with:
            name: ${{ env.test-coverage-key }}
            path: app/coverage
        - name: Build code
          run: npm run build
        - name: Upload build files
          uses: actions/upload-artifact@v4
          with:
            name: ${{ env.build-artifact-key }}
            path: app/build
    deploy:
      runs-on: ubuntu-latest
      needs: test-build
      steps:
        - name: Download build artifact
          uses: actions/download-artifact@v4
          with:
            name: ${{ env.build-artifact-key }}
            path: build
        - name: Show folder structure
          run: ls -R